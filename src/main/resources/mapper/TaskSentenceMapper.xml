<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kmax.example.mapper.TaskSentenceMapper">

    <resultMap type="com.kmax.example.model.TaskSentence" id="TaskSentenceMap">
        <result property="sentenceId" column="sentence_id" jdbcType="INTEGER"/>
        <result property="taskId" column="task_id" jdbcType="INTEGER"/>
        <result property="memberId" column="member_id" jdbcType="INTEGER"/>
        <result property="textContent" column="text_content" jdbcType="VARCHAR"/>
        <result property="changedContent" column="changed_content" jdbcType="VARCHAR"/>
        <result property="sort" column="sort" jdbcType="INTEGER"/>
        <result property="changed" column="changed" jdbcType="INTEGER"/>
        <result property="startTime" column="start_time" jdbcType="INTEGER"/>
        <result property="endTime" column="end_time" jdbcType="INTEGER"/>
        <result property="audioFile" column="audio_file" jdbcType="VARCHAR"/>
        <result property="createdTime" column="created_time" jdbcType="TIMESTAMP"/>
        <result property="updatedTime" column="updated_time" jdbcType="TIMESTAMP"/>
        <result property="createdBy" column="created_by" jdbcType="INTEGER"/>
        <result property="updatedBy" column="updated_by" jdbcType="INTEGER"/>
    </resultMap>

    <select id="selectById" resultMap="TaskSentenceMap">
        SELECT `sentence_id`,
               `task_id`,
               `member_id`,
               `text_content`,
               `changed_content`,
               `sort`,
               `changed`,
               `start_time`,
               `end_time`,
               `audio_file`,
               `created_time`,
               `updated_time`,
               `created_by`,
               `updated_by`
        FROM task_sentence
        WHERE sentence_id = #{sentenceId}
    </select>

    <select id="search" resultMap="TaskSentenceMap">
        SELECT
        `sentence_id`, `task_id`, `member_id`, `text_content`, `changed_content`, `sort`, `changed`, `start_time`,
        `end_time`, `audio_file`, `created_time`, `updated_time`, `created_by`, `updated_by`
        FROM task_sentence
        <where>
            <if test="sentenceId != null">
                AND `sentence_id` = #{sentenceId}
            </if>
            <if test="taskId != null">
                AND `task_id` = #{taskId}
            </if>
            <if test="memberId != null">
                AND `member_id` = #{memberId}
            </if>
            <if test="textContent != null and textContent != ''">
                AND `text_content` = #{textContent}
            </if>
            <if test="changedContent != null and changedContent != ''">
                AND `changed_content` = #{changedContent}
            </if>
            <if test="sort != null">
                AND `sort` = #{sort}
            </if>
            <if test="changed != null">
                AND `changed` = #{changed}
            </if>
            <if test="startTime != null">
                AND `start_time` = #{startTime}
            </if>
            <if test="endTime != null">
                AND `end_time` = #{endTime}
            </if>
            <if test="audioFile != null and audioFile != ''">
                AND `audio_file` = #{audioFile}
            </if>
            <if test="createdTime != null">
                AND `created_time` = #{createdTime}
            </if>
            <if test="updatedTime != null">
                AND `updated_time` = #{updatedTime}
            </if>
            <if test="createdBy != null">
                AND `created_by` = #{createdBy}
            </if>
            <if test="updatedBy != null">
                AND `updated_by` = #{updatedBy}
            </if>
        </where>
    </select>

    <insert id="insert" keyProperty="sentenceId" useGeneratedKeys="true">
        INSERT INTO task_sentence(`task_id`, `member_id`, `text_content`, `changed_content`, `sort`, `changed`,
                                  `start_time`, `end_time`, `audio_file`, `created_by`, `updated_by`)
        VALUES (#{taskId}, #{memberId}, #{textContent}, #{changedContent}, #{sort}, #{changed}, #{startTime},
                #{endTime}, #{audioFile}, #{createdBy}, #{updatedBy})
    </insert>

    <insert id="inserts" parameterType="java.util.List" keyProperty="sentenceId" useGeneratedKeys="true">
        INSERT INTO task_sentence(`task_id`, `member_id`, `text_content`, `changed_content`, `sort`, `changed`,
        `start_time`, `end_time`, `audio_file`, `created_by`, `updated_by`)
        VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.taskId}, #{item.memberId}, #{item.textContent}, #{item.changedContent}, #{item.sort},
            #{item.changed}, #{item.startTime}, #{item.endTime}, #{item.audioFile}, #{item.createdBy},
            #{item.updatedBy})
        </foreach>
    </insert>

    <update id="update" parameterType="com.kmax.example.model.TaskSentence">
        UPDATE task_sentence
        <set>
            <if test="taskId != null">
                `task_id` = #{taskId},
            </if>
            <if test="memberId != null">
                `member_id` = #{memberId},
            </if>
            <if test="textContent != null and textContent != ''">
                `text_content` = #{textContent},
            </if>
            <if test="changedContent != null and changedContent != ''">
                `changed_content` = #{changedContent},
            </if>
            <if test="sort != null">
                `sort` = #{sort},
            </if>
            <if test="changed != null">
                `changed` = #{changed},
            </if>
            <if test="startTime != null">
                `start_time` = #{startTime},
            </if>
            <if test="endTime != null">
                `end_time` = #{endTime},
            </if>
            <if test="audioFile != null and audioFile != ''">
                `audio_file` = #{audioFile},
            </if>
            <if test="createdBy != null">
                `created_by` = #{createdBy},
            </if>
            <if test="updatedBy != null">
                `updated_by` = #{updatedBy},
            </if>
        </set>
        WHERE `sentence_id` = #{sentenceId}
    </update>

    <update id="updates" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" separator=";">
            UPDATE task_sentence
            <set>
                <if test="item.taskId != null">
                    `task_id` = #{item.taskId},
                </if>
                <if test="item.memberId != null">
                    `member_id` = #{item.memberId},
                </if>
                <if test="item.textContent != null and item.textContent != ''">
                    `text_content` = #{item.textContent},
                </if>
                <if test="item.changedContent != null and item.changedContent != ''">
                    `changed_content` = #{item.changedContent},
                </if>
                <if test="item.sort != null">
                    `sort` = #{item.sort},
                </if>
                <if test="item.changed != null">
                    `changed` = #{item.changed},
                </if>
                <if test="item.startTime != null">
                    `start_time` = #{item.startTime},
                </if>
                <if test="item.endTime != null">
                    `end_time` = #{item.endTime},
                </if>
                <if test="item.audioFile != null and item.audioFile != ''">
                    `audio_file` = #{item.audioFile},
                </if>
                <if test="item.createdBy != null">
                    `created_by` = #{item.createdBy},
                </if>
                <if test="item.updatedBy != null">
                    `updated_by` = #{item.updatedBy},
                </if>
            </set>
            WHERE `sentence_id` = #{item.sentenceId}
        </foreach>
    </update>

    <delete id="deleteById" parameterType="java.util.List">
        DELETE FROM task_sentence WHERE `sentence_id` IN
        <foreach item="id" collection="ids" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="exist" resultType="java.lang.Boolean">
        SELECT EXISTS(SELECT 1
                      FROM task_sentence
                      WHERE `field` = #{field}) AS record_exists
    </select>

</mapper>

