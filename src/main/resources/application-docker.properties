# MySQL
spring.datasource.url=jdbc:mysql://kmax-mysql:3306/speech_recognition?allowPublicKeyRetrieval=true&socketTimeout=10000&useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai&autoReconnect=true&failOverReadOnly=false&allowMultiQueries=true&useSSL=false&createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
# HikariCP
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.leak-detection-threshold=5000
# MyBatis
mybatis.configuration.cache-enabled=true
mybatis.configuration.lazy-loading-enabled=false
mybatis.configuration.map-underscore-to-camel-case=true
mybatis.configuration.default-fetch-size=500
mybatis.configuration.default-statement-timeout=30
mybatis.configuration.jdbc-type-for-null=NULL
mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.type-aliases-package=com.kmax.example.model
mybatis.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
# pagehelper
pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql
# Minio
minio.secret-key=PP2H4UZ3ScxF8Zb8k02J
minio.access-key=JHGwHL55NG5RPJNLHilDly0lCSQvuNY9LFloqq1F
minio.bucket-name=kmax
minio.endpoint=kmax-minio:9001
# Redis
# Redis 服务器地址和端口
spring.redis.host=kmax-redis
spring.redis.port=6379
# Redis 数据库索引（默认为 0，可以根据需要调整）
spring.redis.database=0
# Redis 连接密码（如果没有设置密码，可以不配置）
spring.redis.password=
# 连接池配置（根据应用负载调整）
# 连接池中的最大连接数
spring.redis.lettuce.pool.max-active=8
# 连接池中的最大空闲连接数
spring.redis.lettuce.pool.max-idle=8
# 连接池中的最小空闲连接数
spring.redis.lettuce.pool.min-idle=0
# 获取连接的最大等待时间（毫秒）
spring.redis.lettuce.pool.max-wait=1000ms
# 连接超时配置（单位：毫秒）
spring.redis.timeout=2000
# 使用 Redis 哨兵（Sentinel）模式时的配置（根据需求启用）
# spring.redis.sentinel.master=mymaster
# spring.redis.sentinel.nodes=127.0.0.1:26379,127.0.0.1:26380
# 使用 Redis 集群模式时的配置（根据需求启用）
# spring.redis.cluster.nodes=127.0.0.1:6379,127.0.0.1:6380
# Redis 缓存自动配置开关（默认启用，按需启用或禁用）
spring.cache.type=redis





